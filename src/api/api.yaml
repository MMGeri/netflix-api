openapi: '3.0.0'
info:
  version: 1.0.0
  title: Netflix-API
  description: Netflix API
tags:
  - name: Users
    description: user specific actions like creating, logging in logging out
  - name: Videos
    description: video specific actions like queues, videos
paths:
  /users:
    post:
      description: |
        creates a user
      operationId: createUser
      x-eov-operation-handler: controllers/user.controller
      tags:
        - Users
      requestBody:
        description: User to create
        required: true
        content:
          application/json:
            schema:
              properties:
                email:
                  type: string
                  description: The email of the user
                  example: example@gmail.com
                  pattern: ^[\w-\.]+@([\w-]+\.)+[\w-]{2,5}$
                password:
                  type: string
                  description: The password of  the user
                  example: password1234
                  minLength: 8
                  maxLength: 16
              required:
                - email
                - password
              additionalProperties: false
      responses:
        '201':
          description: User was created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Http status code
                    type: number
                    example: 400
                  message:
                    description: The message of the response
                    type: string
                    example: Bad request
                required:
                  - code
                  - message
                additionalProperties: false
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Http status code
                    type: number
                    example: 409
                  message:
                    description: The message of the response
                    type: string
                    example: The user with the given id already exists
                required:
                  - code
                  - message
                additionalProperties: false
        default:
          description: unexpected error happened, for example internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /users/{id}/login:
    post:
      description: |
        logs in a user and returns the user object
      operationId: userLogin
      x-eov-operation-handler: controllers/user.controller
      tags:
        - Users
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The id of the user
          example: 1
      requestBody:
        description: User information
        required: true
        content:
          application/json:
            schema:
              properties:
                password:
                  description: password of the user
                  type: string
                  example: password1234
                  minLength: 8
                  maxLength: 16
              required:
                - password
              additionalProperties: false
      responses:
        '200':
          description: returns a session id
          content:
            application/json:
              schema:
                type: object
                properties:
                  session-id:
                    type: string
                    description: the session id
                    example: asdfhkshdhfjdhaksjdhfiqjd2831jf8
                    pattern: ^[\w\d]{32}$
                additionalProperties: false
                required:
                  - session-id
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Http status code
                    type: number
                    example: 400
                  message:
                    description: The message of the response
                    type: string
                    example: Bad request
                required:
                  - code
                  - message
                additionalProperties: false
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Http status code
                    type: number
                    example: 401
                  message:
                    description: The message of the response
                    type: string
                    example: Password is incorrect
                required:
                  - code
                  - message
                additionalProperties: false
        '404':
          description: Not found
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: number
                    description: response code of the http request
                    example: 404
                  message:
                    type: string
                    description: response code of the http request
                    example: User with the specified id does not exist
                required:
                  - code
                  - message
                additionalProperties: false
        default:
          description: unexpected error happened, for example internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /users/{id}/logout:
    get:
      description: |
        log out of user
      operationId: userLogout
      x-eov-operation-handler: controllers/user.controller
      tags:
        - Users
      parameters:
        - in: header
          name: X-Session-ID
          schema: 
            type: string
            example: asdfhkshdhfjdhaksjdhfiqjd2831jf8
            pattern: ^[\w\d]{32}$
          description: the session id
        - in: path
          name: id
          required: true
          schema: 
            type: string
          description: The id of the user
          example: 1
      responses:
        '204':
          description: No content
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Http status code
                    type: number
                    example: 400
                  message:
                    description: The message of the response
                    type: string
                    example: Bad request
                required:
                  - code
                  - message
                additionalProperties: false
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Http status code
                    type: number
                    example: 401
                  message:
                    description: The message of the response
                    type: string
                    example: You need to be logged in for this action
                required:
                  - code
                  - message
                additionalProperties: false
        '404':
          description: Not found
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Http status code
                    type: number
                    example: 404
                  message:
                    description: The message of the response
                    type: string
                    example: User with specified id does not exist
                required:
                  - code
                  - message
                additionalProperties: false
        default:
          description: unexpected error happened, for example internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /users/{id}/queue:
    put:
      description: |
        Update the users queue with the video specified by its id
      operationId: queueVideo
      x-eov-operation-handler: controllers/user.controller
      tags:
        - Users
      requestBody:
        description: Select the video which you want to put into the queue
        required: true
        content:
          application/json:
            schema:
              properties:
                  videoId:
                    type: string
                    description: id of the video
                    example: 1
              required:
                - videoId
              additionalProperties: false
      parameters:
        - name: id
          in: path
          description: id of the user
          required: true
          schema:
            type: string
          example: 1
        - in: header
          name: X-Session-ID
          schema: 
            type: string
            example: asdfhkshdhfjdhaksjdhfiqjd2831jf8
            pattern: ^[\w\d]{32}$
          required: true
          description: the session id
      responses:
        '200':
          description: The updated queue array
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Queue'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Http status code
                    type: number
                    example: 401
                  message:
                    description: The message of the response
                    type: string
                    example: You need to be logged in for this action
                required:
                  - code
                  - message
                additionalProperties: false
        '404':
          description: Not found
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Http status code
                    type: number
                    example: 404
                  message:
                    description: The message of the response
                    type: string
                    example: The user with specified id does not exist
                required:
                  - code
                  - message
                additionalProperties: false
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
                
    get:
      description: |
        Get your queue
      operationId: getQueue
      x-eov-operation-handler: controllers/user.controller
      tags:
        - Users
      parameters:
        - name: id
          in: path
          description: id of the user
          required: true
          schema:
            type: string
          example: 1
        - name: sort
          in: query
          required: true
          description: sort by
          schema:
            enum:
              - title
              - id
              - type
              - category
        - in: header
          name: X-Session-ID
          schema: 
            type: string
            example: asdfhkshdhfjdhaksjdhfiqjd2831jf8
            pattern: ^[\w\d]{32}$
          required: true
          description: the session id
      responses:
        '200':
          description: An array of videos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Queue'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Http status code
                    type: number
                    example: 400
                  message:
                    description: The message of the response
                    type: string
                    example: User needs to be logged in
                required:
                  - code
                  - message
                additionalProperties: false
        '404':
          description: Not found
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Http status code
                    type: number
                    example: 404
                  message:
                    description: The message of the response
                    type: string
                    example: The user with specified id does not exist
                required:
                  - code
                  - message
                additionalProperties: false
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
                
  /videos:
    get:
      description: |
        Returns videos or tv shows by search with title
      operationId: getVideos
      x-eov-operation-handler: controllers/video.controller
      tags:
        - Videos
      parameters:
        - name: title
          in: query
          description: title of the video or tv show
          required: false
          schema:
            type: string
        - in: header
          name: X-Admin-API-key
          schema:
            type: string
          required: true
          description: An api key
      responses:
        '200':
          description: List of videos
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/Video'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Http status code
                    type: number
                    example: 401
                  message:
                    description: The message of the response
                    type: string
                    example: You need to provide a valid api key
                required:
                  - code
                  - message
                additionalProperties: false
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      description: |
        Create new video data
      operationId: createVideo
      x-eov-operation-handler: controllers/video.controller
      tags:
        - Videos
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                title:
                  description: The title of the movie or tv show
                  type: string
                  example: Titanic
                category:
                  type: string
                  description: category of the video or tv show
                  example: romance
                type:
                  description: the type of the media like Movie or TV Show
                  type: string
                  enum:
                    - Movie
                    - TV Show
                  example: Movie
              required:
                - title
                - category
                - type
              additionalProperties: false
      parameters:
        - in: header
          name: X-Admin-API-key
          schema:
            type: string
          required: true
          description: An api key
      responses:
        '201':
          description: Video created
          content:
            application/json:
              schema:
                properties:
                  id:
                    description: Id of the video
                    type: string
                    example: 1
                  title:
                    description: The title of the movie or tv show
                    type: string
                    example: Titanic
                  category:
                    type: string
                    description: category of the video or tv show
                    example: romance
                  type:
                    description: the type of the media like Movie or TV Show
                    type: string
                    enum:
                      - Movie
                      - TV Show
                    example: Movie
                additionalProperties: false
                required:
                  - id
                  - title
                  - category
                  - type
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Http status code
                    type: number
                    example: 404
                  message:
                    description: The message of the response
                    type: string
                    example: Value provided for type does not match any of the possible values
                required:
                  - code
                  - message
                additionalProperties: false
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Http status code
                    type: number
                    example: 401
                  message:
                    description: The message of the response
                    type: string
                    example: You need to provide a valid api key
                required:
                  - code
                  - message
                additionalProperties: false
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /videos/{id}:
    put:
      description: |
          Change video data
      operationId: changeVideo
      x-eov-operation-handler: controllers/video.controller
      tags:
        - Videos
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                title:
                  type: string
                  description: Title of the video
                  example: The Matrix
                category:
                  type: string
                  description: The category / genre of the video or tv show
                  example: Actoin
                type:
                  type: string
                  enum:
                    - TV Show
                    - Movie
                  example: Movie
              required: 
                - id
                - title
                - category
                - type
              additionalProperties: false
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The id of the video
          example: 1
        - in: header
          name: X-Admin-API-key
          schema:
            type: string
          required: true
          description: An api key
      responses:
        '200':
          description: Video was successfully changed
          content:
            application/json:
              schema:
                properties:
                  id:
                    type: string
                    description: Unique identifier for the video generated by the database
                    example: 1
                  title:
                    type: string
                    description: Title of the video
                    example: The Matrix
                  category:
                    type: string
                    description: The category / genre of the video or tv show
                    example: Actoin
                  type:
                    type: string
                    enum:
                      - TV Show
                      - Movie
                    example: Movie
                required:
                    - id
                    - title
                    - category
                    - type
                additionalProperties: false
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Http status code
                    type: number
                    example: 401
                  message:
                    description: The message of the response
                    type: string
                    example: Value provided for type does not match any of the possible values
                required:
                  - code
                  - message
                additionalProperties: false
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Http status code
                    type: number
                    example: 401
                  message:
                    description: The message of the response
                    type: string
                    example: You need to provide a valid api key
                required:
                  - code
                  - message
                additionalProperties: false
        '404':
          description: Not found
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Http status code
                    type: number
                    example: 401
                  message:
                    description: The message of the response
                    type: string
                    example: Video with the provided id does not exist
                required:
                  - code
                  - message
                additionalProperties: false
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      description: |
          Delete video data
      operationId: deleteVideo
      x-eov-operation-handler: controllers/video.controller
      tags:
        - Videos
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The id of the video
          example: 1
        - in: header
          name: X-Admin-API-key
          schema:
            type: string
          required: true
          description: An api key
      responses:
        '204':
          description: No content
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Http status code
                    type: number
                    example: 401
                  message:
                    description: The message of the response
                    type: string
                    example: You need to provide a valid api key
                required:
                  - code
                  - message
                additionalProperties: false
        '404':
          description: Not found
          content:
            application/json:
              schema:
                properties:
                  code:
                    description: Http status code
                    type: number
                    example: 401
                  message:
                    description: The message of the response
                    type: string
                    example: Video with the provided id does not exist
                required:
                  - code
                  - message
                additionalProperties: false
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /videos/search:
    get:
      description: |
        Returns videos
      operationId: searchVideos
      x-eov-operation-handler: controllers/video.controller
      tags:
        - Videos
      parameters:
        - name: title
          in: query
          description: title of the videos
          required: false
          schema:
            type: string
        - in: header
          name: X-Session-ID
          schema: 
            type: string
            example: asdfhkshdhfjdhaksjdhfiqjd2831jf8
            pattern: ^[\w\d]{32}$
          required: true
          description: the session id
      responses:
        '200':
          description: List of videos
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/Video'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    
components:
  schemas:
  
    User:
      description: A user object
      properties:
        id:
          type: string
          description: The id of the user
          example: 1
        email:
          type: string
          description: The email of the user
          example: example@gmail.com
          pattern: ^[\w-\.]+@([\w-]+\.)+[\w-]{2,5}$
        password:
          type: string
          description: The password of  the user
          example: password1234
          minLength: 8
          maxLength: 16
      required:
        - id
        - email
        - password
      additionalProperties: false
          
    Video:
      description: A video object
      title: Video
      properties:
        id:
         type: string
         description: Unique identifier for the video generated by the database
         example: 1
        title:
          type: string
          description: Title of the video
          example: The Matrix
          maxLength: 40
        category:
          type: string
          description: The category / genre of the video or tv show
          example: Actoin
          maxLength: 30
        type:
          type: string
          enum:
            - TV Show
            - Movie
          example: Movie
      required: 
        - id
        - title
        - category
        - type
      additionalProperties: false
        
    Queue:
      description: An array of videos
      type: array
      items:
        $ref: '#/components/schemas/Video'
        
    Error:
      description: Default error, for example when internal server error occured
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
          description: The http status code of the response
          example: 500
        message:
          type: string
          description: The message of the response
          example: Internal server error
      additionalProperties: false
      
